{"version":3,"sources":["Components/MainContent/MainContent.module.css","UI/GameField/GameField.module.css","UI/Modal/Modal.module.css","App.module.css","Assets/Images/—Pngtree—panda xiong bao baby hand-painted_3860457.png","Components/Outline/Outline.module.css","Redux/ActionCreators/ActionCreators.js","Redux/ActionTypes/ActionTypes.js","Components/Header/Header.js","UI/Modal/Modal.js","UI/GameField/GameField.js","UI/FormDialog/FormDialogP1.js","UI/FormDialog/FormDialogP2.js","Components/MainContent/MainContent.js","Components/Footer/Footer.js","Components/Outline/Outline.js","Redux/Reducer/Reducer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","buttonClicked","value","type","usestyles","makeStyles","theme","header","background","border","borderRadius","boxShadow","color","padding","brand","bigAvatar","width","height","title","flexGrow","button","margin","spacing","fontWeight","connect","state","gameStarted","dispatch","onStartClick","onResetClick","props","classes","AppBar","position","className","Toolbar","Avatar","src","Panda","alt","Typography","variant","Button","disabled","onClick","modal","display","alignItems","justifyContent","paper","textAlign","outline","gameOver","winner","Modal","aria-labelledby","aria-describedby","open","onClose","Fade","in","id","classesModal","para","Paper","marginTop","marginBottom","fontSize","winPara","totalArr","selectedValues","p1Values","p1selectedValues","p2Values","p2selectedValues","draw","onButtonClick","actionCreators","classesStyle","onButtonClicked","gameArea","startGame","ButtonGrp","ButtonGroup","fullWidth","style","aria-label","gameBox","FormDialog","Dialog","DialogTitle","DialogContent","TextField","autoFocus","onChange","onChangeName","DialogActions","onUpdate","rightIcon","marginLeft","lsftIcon","marginRight","player1","player1Active","player2","player2Active","player1Name","player2Name","player1Win","player2Win","onNameUpdate","player","name","useState","openP1","setOpenP1","openP2","setOpenP2","setName","handleClickCloseP1","handleClickCloseP2","handleUpdate","playerName","handleChange","event","target","MainContent","Grid","container","GridGroup","item","xs","lefttIcon","FormDialogP1","GameField","FormDialogP2","footer","Outline","Header","Footer","initiatState","count","player1Array","player2Array","winningValues","sets","input","size","result","mask","i","results","total","Math","pow","length","push","sort","a","b","join","reducers","action","hasOutput","matchWinner","player1Arr","player2Arr","combinationOutput","oldCount","player1Wins","player2Wins","drawn","random","oldState","oldslectedValues","p1oldslectedValues","p2oldslectedValues","includes","player1N","player2N","store","createStore","rootReducer","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0da723db.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"MainContent\":\"MainContent_MainContent__16PI8\",\"GridGroup\":\"MainContent_GridGroup__FnCLp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Paper\":\"GameField_Paper__39eA4\",\"Button\":\"GameField_Button__2EQ6u\",\"gameBox\":\"GameField_gameBox__IrwFJ\",\"startGame\":\"GameField_startGame__2-GKK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Modal_header__1NThf\",\"para\":\"Modal_para__2oGtN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__3rUFz\"};","module.exports = __webpack_public_path__ + \"static/media/—Pngtree—panda xiong bao baby hand-painted_3860457.884ce736.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Outline\":\"Outline_Outline__11mPM\"};","import * as actionTypes from '../ActionTypes/ActionTypes';\r\n\r\nexport const startClicked = () => {\r\n    return {\r\n        type: actionTypes.START_CLICKED\r\n    };\r\n};\r\n\r\nexport const resetClicked = () => {\r\n    return {\r\n        type: actionTypes.RESET_CLICKED\r\n    };\r\n};\r\n\r\nexport const buttonClicked = (value) => {\r\n    return {\r\n        type: actionTypes.BUTTON_CLICKED,\r\n        value: value\r\n    };\r\n};\r\n\r\nexport const nameUpdate = (player, value) => {\r\n    return {\r\n        type: actionTypes.NAME_UPDATE,\r\n        player: player,\r\n        value: value\r\n    };\r\n};","export const START_CLICKED = 'START_CLICKED';\r\nexport const RESET_CLICKED = 'RESET_CLICKED';\r\nexport const BUTTON_CLICKED = 'BUTTON_CLICKED';\r\nexport const NAME_UPDATE = 'NAME_UPDATE';","import React, { Fragment } from 'react';\r\nimport { AppBar, Toolbar, Typography, Button, Avatar } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux';\r\n\r\nimport * as actionCreators from '../../Redux/ActionCreators/ActionCreators';\r\nimport Panda from '../../Assets/Images/—Pngtree—panda xiong bao baby hand-painted_3860457.png';\r\n\r\nconst usestyles = makeStyles(theme => ({\r\n    header: {\r\n        background: 'rgba(0,0,0,.4)',\r\n        border: 0,\r\n        borderRadius: 3,\r\n        boxShadow: '0 5px 5px 0 rgba(0,0,0, .9)',\r\n        color: 'white',\r\n        padding: 0,\r\n    },\r\n    brand: {\r\n        // flexGrow: 1\r\n    },\r\n    bigAvatar: {\r\n        padding: 5,\r\n        width: 60,\r\n        height: 60,\r\n    },\r\n    title: {\r\n        flexGrow: 1\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n        fontWeight: 900,\r\n        background: 'radial-gradient(circle, rgba(241,141,9,0.8687850140056023) 28%, rgba(32,28,23,1) 100%)',\r\n\r\n    },\r\n}));\r\n\r\nconst header = (props) => {\r\n    const classes = usestyles();\r\n    return (\r\n        <Fragment>\r\n            <AppBar position=\"static\" className={classes.header}>\r\n                <Toolbar>\r\n                    <Avatar src={Panda} alt=\"Panda\" className={classes.bigAvatar} />\r\n                    <Typography variant=\"h4\" className={classes.title}>\r\n                        Tic Tac Toe\r\n                    </Typography>\r\n                    <Button\r\n                        variant=\"outlined\"\r\n                        color=\"inherit\"\r\n                        className={classes.button}\r\n                        disabled={props.gameStarted}\r\n                        onClick={props.onStartClick}>\r\n                        Start\r\n                    </Button>\r\n                    <Button\r\n                        variant=\"outlined\"\r\n                        color=\"inherit\"\r\n                        className={classes.button}\r\n                        disabled={!props.gameStarted}\r\n                        onClick={props.onResetClick}>\r\n                        Reset\r\n                    </Button>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nconst mapStatetoProps = (state) => {\r\n    return {\r\n        gameStarted: state.gameStarted\r\n    }\r\n}\r\n\r\nconst mapDipatchtoProps = (dispatch) => {\r\n    return {\r\n        onStartClick: () => dispatch(actionCreators.startClicked()),\r\n        onResetClick: () => dispatch(actionCreators.resetClicked()),\r\n    }\r\n}\r\n\r\nexport default connect(mapStatetoProps, mapDipatchtoProps)(header);","import React, { Fragment } from 'react';\r\nimport { Modal, Fade } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux';\r\n\r\nimport * as actionCreators from '../../Redux/ActionCreators/ActionCreators';\r\nimport classesModal from './Modal.module.css';\r\n\r\nconst usestyles = makeStyles(theme => ({\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    paper: {\r\n        position: 'absolute',\r\n        width: 400,\r\n        background: 'rgba(0,0,0,.8)',\r\n        boxShadow: '10px 10px 5px 0 rgba(0,0,0, .9)',\r\n        padding: theme.spacing(2, 4, 3),\r\n        textAlign: 'center',\r\n        outline: 0\r\n    },\r\n}));\r\n\r\nconst modal = (props) => {\r\n    const classes = usestyles();\r\n\r\n    const handleClose = () => {\r\n        props.onResetClick()\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            <Modal\r\n                aria-labelledby=\"simple-modal-title\"\r\n                aria-describedby=\"simple-modal-description\"\r\n                open={props.gameOver}\r\n                onClose={handleClose}\r\n                className={classes.modal}\r\n            >\r\n                <Fade in={props.gameOver}>\r\n                    <div className={classes.paper}>\r\n                        <h2 id=\"simple-modal-title\" className={classesModal.header}>Game Over</h2>\r\n                        <p id=\"simple-modal-description\" className={classesModal.para}>\r\n                            Winner is: {props.winner}\r\n                        </p>\r\n                    </div>\r\n                </Fade>\r\n            </Modal>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nconst mapStatetoProps = (state) => {\r\n    return {\r\n        gameOver: state.gameOver,\r\n        winner: state.winner\r\n    }\r\n}\r\n\r\nconst mapDipatchtoProps = (dispatch) => {\r\n    return {\r\n        onResetClick: () => dispatch(actionCreators.resetClicked()),\r\n    }\r\n}\r\n\r\nexport default connect(mapStatetoProps, mapDipatchtoProps)(modal);","import React, { Fragment } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Paper, Button, ButtonGroup } from '@material-ui/core';\r\nimport { connect } from 'react-redux';\r\n\r\nimport * as actionCreators from '../../Redux/ActionCreators/ActionCreators';\r\nimport classes from './GameField.module.css';\r\n\r\nconst usestyles = makeStyles(theme => ({\r\n    Paper: {\r\n        padding: 10,\r\n        marginTop: 10,\r\n        marginBottom: 10,\r\n        height: '94%',\r\n        background: 'rgba(0,0,0,.7)',\r\n        boxShadow: '5px 5px 1px 0 rgba(0,0,0, .9)',\r\n    },\r\n    Button: {\r\n        height: 120,\r\n        color: '#ffffff',\r\n        fontSize: 30\r\n    },\r\n    winPara: {\r\n        color: '#ffffff',\r\n        marginTop: 30,\r\n        fontSize: 32\r\n    }\r\n}));\r\n\r\nconst gameField = (props) => {\r\n    const classesStyle = usestyles();\r\n\r\n    const onButtonClicked = (value) => {\r\n        props.onButtonClick(value);\r\n    }\r\n\r\n    let gameArea = <div className={classes.startGame}>Start the Game</div>\r\n\r\n    if (props.gameStarted) {\r\n        gameArea = (\r\n            <div className={classes.ButtonGrp}>\r\n                <ButtonGroup\r\n                    fullWidth\r\n                    disabled={!props.gameStarted}>\r\n                    <Button\r\n                        className={classesStyle.Button}\r\n                        onClick={() => onButtonClicked(1)}\r\n                        disabled={props.totalArr[1]}\r\n                        style={{ border: props.totalArr[1] ? '2px solid #bdbdbd' : '2px solid #bdbdbd' }}\r\n                    >\r\n                        <p\r\n                            style={{\r\n                                color: '#ffffff',\r\n                                display: props.p1Values[1] ? 'block' : 'none',\r\n                                fontSize: 30\r\n                            }}\r\n                        >\r\n                            X\r\n                            </p>\r\n                        <p\r\n                            style={{\r\n                                color: '#ffffff',\r\n                                display: props.p2Values[1] ? 'block' : 'none',\r\n                                fontSize: 30\r\n                            }}\r\n                        >\r\n                            O\r\n                            </p>\r\n                        </Button>\r\n                    <Button\r\n                        className={classesStyle.Button}\r\n                        onClick={() => onButtonClicked(2)}\r\n                        disabled={props.totalArr[2]}\r\n                        style={{ border: props.totalArr[2] ? '2px solid #bdbdbd' : '2px solid #bdbdbd' }}\r\n                    >\r\n                        <p\r\n                            style={{\r\n                                color: '#ffffff',\r\n                                display: props.p1Values[2] ? 'block' : 'none',\r\n                                fontSize: 30\r\n                            }}\r\n                        >\r\n                            X\r\n                            </p>\r\n                        <p\r\n                            style={{\r\n                                color: '#ffffff',\r\n                                display: props.p2Values[2] ? 'block' : 'none',\r\n                                fontSize: 30\r\n                            }}\r\n                        >\r\n                            O\r\n                            </p>\r\n                        </Button>\r\n                    <Button\r\n                        className={classesStyle.Button}\r\n                        onClick={() => onButtonClicked(3)}\r\n                        disabled={props.totalArr[3]}\r\n                        style={{ border: props.totalArr[3] ? '2px solid #bdbdbd' : '2px solid #bdbdbd' }}\r\n                    >\r\n                        <p\r\n                            style={{\r\n                                color: '#ffffff',\r\n                                display: props.p1Values[3] ? 'block' : 'none',\r\n                                fontSize: 30\r\n                            }}\r\n                        >\r\n                            X\r\n                            </p>\r\n                        <p\r\n                            style={{\r\n                                color: '#ffffff',\r\n                                display: props.p2Values[3] ? 'block' : 'none',\r\n                                fontSize: 30\r\n                            }}\r\n                        >\r\n                            O\r\n                            </p>\r\n                        </Button>\r\n                </ButtonGroup>\r\n\r\n                <ButtonGroup\r\n                    fullWidth\r\n                    aria-label=\"outlined primary button group\"\r\n                    disabled={!props.gameStarted}>\r\n                    <Button\r\n                        className={classesStyle.Button}\r\n                        onClick={() => onButtonClicked(4)}\r\n                        disabled={props.totalArr[4]}\r\n                        style={{ border: props.totalArr[4] ? '2px solid #bdbdbd' : '2px solid #bdbdbd' }}\r\n                    >\r\n                        <p\r\n                            style={{\r\n                                color: '#ffffff',\r\n                                display: props.p1Values[4] ? 'block' : 'none',\r\n                                fontSize: 30\r\n                            }}\r\n                        >\r\n                            X\r\n                            </p>\r\n                        <p\r\n                            style={{\r\n                                color: '#ffffff',\r\n                                display: props.p2Values[4] ? 'block' : 'none',\r\n                                fontSize: 30\r\n                            }}\r\n                        >\r\n                            O\r\n                            </p>\r\n                        </Button>\r\n                    <Button\r\n                        className={classesStyle.Button}\r\n                        onClick={() => onButtonClicked(5)}\r\n                        disabled={props.totalArr[5]}\r\n                        style={{ border: props.totalArr[5] ? '2px solid #bdbdbd' : '2px solid #bdbdbd' }}\r\n                    >\r\n                        <p\r\n                            style={{\r\n                                color: '#ffffff',\r\n                                display: props.p1Values[5] ? 'block' : 'none',\r\n                                fontSize: 30\r\n                            }}\r\n                        >\r\n                            X\r\n                            </p>\r\n                        <p\r\n                            style={{\r\n                                color: '#ffffff',\r\n                                display: props.p2Values[5] ? 'block' : 'none',\r\n                                fontSize: 30\r\n                            }}\r\n                        >\r\n                            O\r\n                            </p>\r\n                        </Button>\r\n                    <Button\r\n                        className={classesStyle.Button}\r\n                        onClick={() => onButtonClicked(6)}\r\n                        disabled={props.totalArr[6]}\r\n                        style={{ border: props.totalArr[6] ? '2px solid #bdbdbd' : '2px solid #bdbdbd' }}\r\n                    >\r\n                        <p\r\n                            style={{\r\n                                color: '#ffffff',\r\n                                display: props.p1Values[6] ? 'block' : 'none',\r\n                                fontSize: 30\r\n                            }}\r\n                        >\r\n                            X\r\n                            </p>\r\n                        <p\r\n                            style={{\r\n                                color: '#ffffff',\r\n                                display: props.p2Values[6] ? 'block' : 'none',\r\n                                fontSize: 30\r\n                            }}\r\n                        >\r\n                            O\r\n                            </p>\r\n                        </Button>\r\n                </ButtonGroup>\r\n\r\n                <ButtonGroup\r\n                    fullWidth\r\n                    aria-label=\"outlined primary button group\"\r\n                    disabled={!props.gameStarted}>\r\n                    <Button\r\n                        className={classesStyle.Button}\r\n                        onClick={() => onButtonClicked(7)}\r\n                        disabled={props.totalArr[7]}\r\n                        style={{ border: props.totalArr[7] ? '2px solid #bdbdbd' : '2px solid #bdbdbd' }}\r\n                    >\r\n                        <p\r\n                            style={{\r\n                                color: '#ffffff',\r\n                                display: props.p1Values[7] ? 'block' : 'none',\r\n                                fontSize: 30\r\n                            }}\r\n                        >\r\n                            X\r\n                            </p>\r\n                        <p\r\n                            style={{\r\n                                color: '#ffffff',\r\n                                display: props.p2Values[7] ? 'block' : 'none',\r\n                                fontSize: 30\r\n                            }}\r\n                        >\r\n                            O\r\n                            </p>\r\n                        </Button>\r\n                    <Button\r\n                        className={classesStyle.Button}\r\n                        onClick={() => onButtonClicked(8)}\r\n                        disabled={props.totalArr[8]}\r\n                        style={{ border: props.totalArr[8] ? '2px solid #bdbdbd' : '2px solid #bdbdbd' }}\r\n                    >\r\n                        <p\r\n                            style={{\r\n                                color: '#ffffff',\r\n                                display: props.p1Values[8] ? 'block' : 'none',\r\n                                fontSize: 30\r\n                            }}\r\n                        >\r\n                            X\r\n                            </p>\r\n                        <p\r\n                            style={{\r\n                                color: '#ffffff',\r\n                                display: props.p2Values[8] ? 'block' : 'none',\r\n                                fontSize: 30\r\n                            }}\r\n                        >\r\n                            O\r\n                            </p>\r\n                        </Button>\r\n                    <Button\r\n                        className={classesStyle.Button}\r\n                        onClick={() => onButtonClicked(9)}\r\n                        disabled={props.totalArr[9]}\r\n                        style={{ border: props.totalArr[9] ? '2px solid #bdbdbd' : '2px solid #bdbdbd' }}\r\n                    >\r\n                        <p\r\n                            style={{\r\n                                color: '#ffffff',\r\n                                display: props.p1Values[9] ? 'block' : 'none',\r\n                                fontSize: 30\r\n                            }}\r\n                        >\r\n                            X\r\n                            </p>\r\n                        <p\r\n                            style={{\r\n                                color: '#ffffff',\r\n                                display: props.p2Values[9] ? 'block' : 'none',\r\n                                fontSize: 30\r\n                            }}\r\n                        >\r\n                            O\r\n                            </p>\r\n                        </Button>\r\n                </ButtonGroup>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <Paper className={classesStyle.Paper}>\r\n                <div className={classes.gameBox}>\r\n                    {gameArea}\r\n                </div>\r\n                <div>\r\n                    <p className={classesStyle.winPara}>No Result: {props.draw}</p>\r\n                </div>\r\n            </Paper>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nconst mapStatetoProps = (state) => {\r\n    return {\r\n        gameStarted: state.gameStarted,\r\n        totalArr: state.selectedValues,\r\n        p1Values: state.p1selectedValues,\r\n        p2Values: state.p2selectedValues,\r\n        draw: state.draw,\r\n    }\r\n}\r\n\r\nconst mapDipatchtoProps = (dispatch) => {\r\n    return {\r\n        onButtonClick: (value) => dispatch(actionCreators.buttonClicked(value))\r\n    }\r\n}\r\n\r\nexport default connect(mapStatetoProps, mapDipatchtoProps)(gameField);","import React, { Fragment } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nconst FormDialog = (props) => {\r\n\r\n  return (\r\n    <Fragment>\r\n      <Dialog open={props.open} onClose={props.onClose} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">Enter your Name</DialogTitle>\r\n        <DialogContent>\r\n          <TextField \r\n            autoFocus\r\n            id=\"name\"\r\n            onChange={props.onChangeName}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={props.onClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={props.onUpdate} color=\"primary\">\r\n            Update\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default FormDialog;","import React, { Fragment } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nconst FormDialog = (props) => {\r\n\r\n  return (\r\n    <Fragment>\r\n      <Dialog open={props.open} onClose={props.onClose} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">Enter your Name</DialogTitle>\r\n        <DialogContent>\r\n          <TextField \r\n            autoFocus\r\n            id=\"name\"\r\n            onChange={props.onChangeName}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={props.onClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={props.onUpdate} color=\"primary\">\r\n            Update\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default FormDialog;","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Grid, Paper, Button, ButtonGroup } from '@material-ui/core';\r\nimport FaceIcon from '@material-ui/icons/Face';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { connect } from 'react-redux';\r\n\r\nimport * as actionCreators from '../../Redux/ActionCreators/ActionCreators';\r\nimport ModalUI from '../../UI/Modal/Modal';\r\nimport GameField from '../../UI/GameField/GameField';\r\nimport FormDialogP1 from '../../UI/FormDialog/FormDialogP1';\r\nimport FormDialogP2 from '../../UI/FormDialog/FormDialogP2';\r\n\r\nimport classes from './MainContent.module.css';\r\n\r\nconst usestyles = makeStyles(theme => ({\r\n    Paper: {\r\n        padding: 10,\r\n        margin: 10,\r\n        height: '94%',\r\n        background: 'rgba(0,0,0,.7)',\r\n        boxShadow: '5px 5px 1px 0 rgba(0,0,0, .9)',\r\n    },\r\n    Button: {\r\n        background: 'linear-gradient(45deg, rgba(208,124,13,0.8687850140056023) 40%, rgba(250,199,127,1) 100%)',\r\n        fontWeight: 'bold',\r\n        color: '#ffffff',\r\n    },\r\n    rightIcon: {\r\n        marginLeft: theme.spacing(1),\r\n    },\r\n    lsftIcon: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    winPara: {\r\n        color: '#ffffff',\r\n        marginTop: 30,\r\n        fontSize: 32        \r\n    }\r\n}));\r\n\r\nconst mainContent = (props) => {\r\n    // eslint-disable-next-line react-hooks/rules-of-hooks\r\n    const [openP1, setOpenP1] = useState(false);\r\n    // eslint-disable-next-line react-hooks/rules-of-hooks\r\n    const [openP2, setOpenP2] = useState(false);\r\n    // eslint-disable-next-line react-hooks/rules-of-hooks\r\n    const [name, setName] = useState('');\r\n\r\n    const classesStyle = usestyles();\r\n\r\n    function handleClickOpenP1() {\r\n        setOpenP1(true);\r\n    }\r\n\r\n    function handleClickCloseP1() {\r\n        setOpenP1(false);\r\n    }\r\n\r\n    function handleClickOpenP2() {\r\n        setOpenP2(true);\r\n    }\r\n\r\n    function handleClickCloseP2() {\r\n        setOpenP2(false);\r\n    }\r\n\r\n    const handleUpdate = (playerName) => {\r\n        if (name !== '') {\r\n            props.onNameUpdate(playerName, name)\r\n        }\r\n        handleClickCloseP1();\r\n        handleClickCloseP2();\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        setName(event.target.value)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.MainContent}>\r\n            <Grid container spacing={2} className={classes.GridGroup}>\r\n                <Grid item xs={3}>\r\n                    <Paper className={classesStyle.Paper}>\r\n                        <ButtonGroup variant=\"contained\">\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                disabled={!props.player1}\r\n                                className={classesStyle.Button}\r\n                            >\r\n                                <FaceIcon className={classes.rightIcon} />\r\n                                {props.player1Name}\r\n                            </Button>\r\n                            <Button\r\n                                disabled={props.gameStarted}\r\n                                className={classesStyle.Button}\r\n                            >\r\n                                <EditIcon className={classes.lefttIcon} onClick={handleClickOpenP1} />\r\n                                <FormDialogP1\r\n                                    open={openP1}\r\n                                    player={props.player1Name}\r\n                                    onClose={handleClickCloseP1}\r\n                                    onUpdate={() => handleUpdate('player1')}\r\n                                    onChangeName={handleChange}\r\n                                />\r\n                            </Button>\r\n                        </ButtonGroup>\r\n                        <p className={classesStyle.winPara}>Win: {props.player1Win}</p>\r\n                    </Paper>\r\n                </Grid>\r\n\r\n                <Grid item xs={6}>\r\n                    <GameField />\r\n                </Grid>\r\n\r\n                <Grid item xs={3}>\r\n                    <Paper className={classesStyle.Paper}>\r\n                        <ButtonGroup variant=\"contained\">\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                disabled={!props.player2}\r\n                                className={classesStyle.Button}\r\n                            >\r\n                                <FaceIcon className={classes.rightIcon} />\r\n                                {props.player2Name}\r\n                            </Button>\r\n                            <Button\r\n                                disabled={props.gameStarted}\r\n                                className={classesStyle.Button}\r\n                            >\r\n                                <EditIcon className={classes.lefttIcon} onClick={handleClickOpenP2} />\r\n                                <FormDialogP2\r\n                                    open={openP2}\r\n                                    player={props.player2Name}\r\n                                    onClose={handleClickCloseP2}\r\n                                    onUpdate={() => handleUpdate('player2')}\r\n                                    onChangeName={handleChange}\r\n                                />\r\n                            </Button>\r\n                        </ButtonGroup>\r\n                        <p className={classesStyle.winPara}>Win: {props.player2Win}</p>\r\n                    </Paper>\r\n                </Grid>\r\n            </Grid>\r\n            <div>\r\n                <ModalUI />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStatetoProps = (state) => {\r\n    return {\r\n        gameStarted: state.gameStarted,\r\n        player1: state.player1Active,\r\n        player2: state.player2Active,\r\n        player1Name: state.player1Name,\r\n        player2Name: state.player2Name,\r\n        player1Win: state.player1Win,\r\n        player2Win: state.player2Win,\r\n    }\r\n}\r\n\r\nconst mapDipatchtoProps = (dispatch) => {\r\n    return {\r\n        onButtonClick: (value) => dispatch(actionCreators.buttonClicked(value)),\r\n        onResetClick: () => dispatch(actionCreators.resetClicked()),\r\n        onNameUpdate: (player, name) => dispatch(actionCreators.nameUpdate(player, name)),\r\n    }\r\n}\r\n\r\nexport default connect(mapStatetoProps, mapDipatchtoProps)(mainContent);","import React from 'react';\r\nimport { AppBar, Toolbar, Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst usestyles = makeStyles(theme => ({\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    footer: {\r\n        background: 'rgba(0,0,0,.8)',\r\n        border: 0,\r\n        borderRadius: 3,\r\n        boxShadow: '0 5px 5px 0 rgba(0,0,0, .9)',\r\n        color: 'white',\r\n        padding: '0 30px',\r\n      }\r\n}));\r\n\r\n\r\nconst footer = (props) => {\r\n    const classes = usestyles();\r\n    return (\r\n        <div>\r\n            <AppBar position=\"static\" className={classes.footer}>\r\n                <Toolbar>\r\n                    <Typography variant=\"caption\" className={classes.title}>\r\n                        @Copy rights\r\n                    </Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default footer;","import React, { Fragment } from 'react';\r\n\r\nimport Header from '../Header/Header';\r\nimport MainContent from '../MainContent/MainContent';\r\nimport Footer from '../Footer/Footer';\r\n\r\nimport classes from './Outline.module.css';\r\n\r\n\r\nconst outline = () => {\r\n    return (\r\n        <div className={classes.Outline}>\r\n            <Header />\r\n            <MainContent />\r\n            <Footer />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default outline;","import * as actionTypes from '../ActionTypes/ActionTypes';\r\n\r\nconst initiatState = {\r\n    gameStarted: false,\r\n    selectedValues: {\r\n        '1': false,\r\n        '2': false,\r\n        '3': false,\r\n        '4': false,\r\n        '5': false,\r\n        '6': false,\r\n        '7': false,\r\n        '8': false,\r\n        '9': false\r\n    },\r\n    p1selectedValues: {\r\n        '1': false,\r\n        '2': false,\r\n        '3': false,\r\n        '4': false,\r\n        '5': false,\r\n        '6': false,\r\n        '7': false,\r\n        '8': false,\r\n        '9': false\r\n    },\r\n    p2selectedValues: {\r\n        '1': false,\r\n        '2': false,\r\n        '3': false,\r\n        '4': false,\r\n        '5': false,\r\n        '6': false,\r\n        '7': false,\r\n        '8': false,\r\n        '9': false\r\n    },\r\n    count: 0,\r\n    player1Active: false,\r\n    player2Active: false,\r\n    player1Name: 'Player 1',\r\n    player2Name: 'Player 2',\r\n    player1Array: [],\r\n    player2Array: [],\r\n    player1Win: 0,\r\n    player2Win: 0,\r\n    draw: 0,\r\n    winner: null,\r\n    gameOver: false\r\n};\r\n\r\nconst winningValues = ['123', '456', '789', '147', '258', '369', '159', '357'];\r\n\r\nconst sets = (input, size) => {\r\n    let results = [], result, mask, i, total = Math.pow(2, input.length);\r\n\r\n    for (mask = size; mask < total; mask++) {\r\n        result = [];\r\n        i = input.length - 1;\r\n\r\n        do {\r\n            if ((mask & (1 << i)) !== 0) {\r\n                result.push(input[i]);\r\n            }\r\n        } while (i--);\r\n\r\n        if (result.length >= size) {\r\n            if (result.length === 3) {\r\n                result = result.sort((a, b) => a - b);\r\n                result = result.join('');\r\n                results.push(result);\r\n            }\r\n        }\r\n    }\r\n    return results;\r\n};\r\n\r\nconst reducers = (state = initiatState, action) => {\r\n    let player1 = false;\r\n    let player2 = false;\r\n    let hasOutput = false;\r\n    let matchWinner = null;\r\n    let player1Arr = [];\r\n    let player2Arr = [];\r\n    let combinationOutput = [];\r\n    let oldCount = 0;\r\n    let player1Wins = 0;\r\n    let player2Wins = 0;\r\n    let drawn = 0;\r\n\r\n    switch (action.type) {\r\n        case actionTypes.START_CLICKED:\r\n            const value = Math.random();\r\n\r\n            if (value > 0.5) {\r\n                player1 = true;\r\n            } else {\r\n                player2 = true;\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                gameStarted: true,\r\n                player1Active: player1,\r\n                player2Active: player2\r\n            }\r\n\r\n        case actionTypes.RESET_CLICKED:\r\n            return {\r\n                ...state,\r\n                gameStarted: false,\r\n                selectedValues: {\r\n                    '1': false,\r\n                    '2': false,\r\n                    '3': false,\r\n                    '4': false,\r\n                    '5': false,\r\n                    '6': false,\r\n                    '7': false,\r\n                    '8': false,\r\n                    '9': false\r\n                },\r\n                p1selectedValues: {\r\n                    '1': false,\r\n                    '2': false,\r\n                    '3': false,\r\n                    '4': false,\r\n                    '5': false,\r\n                    '6': false,\r\n                    '7': false,\r\n                    '8': false,\r\n                    '9': false\r\n                },\r\n                p2selectedValues: {\r\n                    '1': false,\r\n                    '2': false,\r\n                    '3': false,\r\n                    '4': false,\r\n                    '5': false,\r\n                    '6': false,\r\n                    '7': false,\r\n                    '8': false,\r\n                    '9': false\r\n                },\r\n                count:0,\r\n                player1Active: false,\r\n                player2Active: false,\r\n                player1Array: [],\r\n                player2Array: [],\r\n                winner: null,\r\n                gameOver: false\r\n            }\r\n\r\n        case actionTypes.BUTTON_CLICKED:\r\n            const oldState = { ...state };\r\n            const oldslectedValues = { ...oldState.selectedValues };\r\n            const p1oldslectedValues = { ...oldState.p1selectedValues };\r\n            const p2oldslectedValues = { ...oldState.p2selectedValues };\r\n            oldslectedValues[action.value] = true;\r\n            \r\n            oldCount = oldState.count;\r\n            oldCount = oldCount + 1;\r\n\r\n            player1 = oldState.player1Active;\r\n            player2 = oldState.player2Active;\r\n            player1Arr = [...oldState.player1Array];\r\n            player2Arr = [...oldState.player2Array];\r\n            player1Wins = oldState.player1Win;\r\n            player2Wins = oldState.player2Win;\r\n            drawn = oldState.draw;\r\n\r\n            if (player1) {\r\n                p1oldslectedValues[action.value] = true;\r\n                player1Arr.push(action.value);\r\n                if (player1Arr.length > 2) {\r\n                    combinationOutput = sets(player1Arr, 3);\r\n                }\r\n            } else {\r\n                p2oldslectedValues[action.value] = true;\r\n                player2Arr.push(action.value);\r\n                if (player2Arr.length > 2) {\r\n                    combinationOutput = sets(player2Arr, 3);\r\n                }\r\n            }\r\n            for (let i = 0; i < combinationOutput.length; i++) {\r\n                if (!hasOutput) {\r\n                    hasOutput = winningValues.includes(combinationOutput[i]);\r\n                }\r\n            }\r\n\r\n            if (hasOutput) {\r\n                if (player1) {\r\n                    matchWinner = state.player1Name\r\n                    player1Wins = player1Wins + 1;\r\n                } else {\r\n                    matchWinner = state.player2Name\r\n                    player2Wins = player2Wins + 1;\r\n                }\r\n            }\r\n\r\n            if(oldCount === 9) {\r\n                matchWinner = 'No one';\r\n                hasOutput = true\r\n                drawn = drawn + 1;\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                selectedValues: oldslectedValues,\r\n                p1selectedValues: p1oldslectedValues,\r\n                p2selectedValues: p2oldslectedValues,\r\n                player1Active: !player1,\r\n                player2Active: !player2,\r\n                count: oldCount,\r\n                player1Array: player1Arr,\r\n                player2Array: player2Arr,\r\n                player1Win: player1Wins,\r\n                player2Win: player2Wins,\r\n                draw: drawn,\r\n                winner: matchWinner,\r\n                gameOver: hasOutput\r\n            }\r\n\r\n            case actionTypes.NAME_UPDATE:\r\n                let player1N = state.player1Name;\r\n                let player2N = state.player2Name;\r\n                if(action.player === 'player1') {\r\n                    player1N = action.value\r\n                } else {\r\n                    player2N = action.value\r\n                }\r\n\r\n                return {\r\n                    ...state,\r\n                    player1Name: player1N,\r\n                    player2Name: player2N\r\n                }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducers;","import React from 'react';\nimport classes from './App.module.css';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\n\nimport Outline from './Components/Outline/Outline'\nimport rootReducer from './Redux/Reducer/Reducer';\n\nconst store = createStore(rootReducer);\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div className={classes.App}>\n        <Outline />\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}